mydata4 = substring('k', )
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
raw.df <- readr::read_csv("./data.csv")
setwd("~/Downloads")
raw.df <- readr::read_csv("./data.csv")
setwd("~/Downloads")
raw.df <- readr::read_csv("./data.csv")
library(tidyverse)
raw.df <- readr::read_csv("./data.csv")
raw.df <- readr::read_csv("./data.csv")
?rename_all
?toupper
?tolower
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
tolower(names(raw.df))
# 2. Convert the inspection.date column from character to date format.
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
tolower(names(raw.df))
head(raw.df)
# 2. Convert the inspection.date column from character to date format.
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
tolower(names(raw.df))
names(raw.df)
# 2. Convert the inspection.date column from character to date format.
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
raw1.df <- tolower(names(raw.df))
head(raw1.df)
# 2. Convert the inspection.date column from character to date format.
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
tolower(names(raw.df))
head(raw.df)
# 2. Convert the inspection.date column from character to date format.
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
?rename_all
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
raw.df %>% rename_all(., names(raw.df),tolower)
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
names(raw.df)
# 2. Convert the inspection.date column from character to date format.
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
raw.df %>% select_all(., tolower)
# 2. Convert the inspection.date column from character to date format.
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
?str_replace_all
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df1 <- draw.df %>% select_all(., tolower)
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df1 <- raw.df %>% select_all(., tolower)
names(df1)<- str_replace_all(names(df1), " ", "." )
# 2. Convert the inspection.date column from character to date format.
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
sapply(df1, class)
?transform
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df1 <- raw.df %>% select_all(., tolower)
names(df1)<- str_replace_all(names(df1), " ", "." )
df1 <- df1 %>% transform(., inspection.date = as.date)
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df1 <- raw.df %>% select_all(., tolower)
names(df1)<- str_replace_all(names(df1), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df1 <- df1 %>% transform(., inspection.date = as.Date(inspection.date))
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df1 <- raw.df %>% select_all(., tolower)
names(df1)<- str_replace_all(names(df1), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df1 <- df1 %>% transform(., inspection.date = as.Date(inspection.date))
sapply(df1, class)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df1 <- raw.df %>% select_all(., tolower)
names(df1)<- str_replace_all(names(df1), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df1 <- df1 %>% transform(., inspection.date = as.Date(inspection.date))
sapply(df1, class)
head(df1)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df1 <- raw.df %>% select_all(., tolower)
names(df1)<- str_replace_all(names(df1), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df1 <- df1 %>% transform(., inspection.date = as.Date(inspection.date))
sapply(df1, class)
head(df1)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df1 <- df1 %>% mutate(., month = inspection.date) %>% transform(., month = as.numeric(month))
head(df1)
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df1 <- raw.df %>% select_all(., tolower)
names(df1)<- str_replace_all(names(df1), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df1 <- df1 %>% transform(., inspection.date = as.Date(inspection.date))
sapply(df1, class)
head(df1)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df1 <- df1 %>% mutate(., month = inspection.date) %>%
head(df1)
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df1 <- raw.df %>% select_all(., tolower)
names(df1)<- str_replace_all(names(df1), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df1 <- df1 %>% transform(., inspection.date = as.Date(inspection.date))
sapply(df1, class)
head(df1)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df1 <- df1 %>% mutate(., month = inspection.date)
head(df1)
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
View(raw.df)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df1 <- raw.df %>% mutate(., month = inspection.date[1])
View(df1)
?as.Date
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df1 <- raw.df %>% select_all(., tolower)
names(df1)<- str_replace_all(names(df1), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df1 <- df1 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df1, class)
head(df1)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df1 <- raw.df %>% mutate(., month = inspection.date[1])
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df1 <- raw.df %>% select_all(., tolower)
names(df1)<- str_replace_all(names(df1), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df1 <- df1 %>% transform(., inspection.date = as.Date(inspection.date,format = "%m/%d/%y"))
sapply(df1, class)
head(df1)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df1 <- raw.df %>% mutate(., month = inspection.date[1])
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df1 <- raw.df %>% mutate(., month = inspection.date[1])
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df2 <- raw.df %>% mutate(., month = inspection.date[1])
？sub
?sub
?as.numeric
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df2 <- raw.df %>% mutate(., month = inspection.date)
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df2 <- df2 %>% mutate(., month = inspection.date)
head(df2)
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df2$month[1]
df2 <- df2 %>% mutate(., month = inspection.date)
head(df2)
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
print(df2$month[1])
df2 <- df2 %>% mutate(., month = inspection.date)
head(df2)
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
sub(df2$month,6,7)
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df2 <- df2 %>% mutate(., month = inspection.date)
sub(df2$month,6,7)
head(df2)
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
View(df2)
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df2 <- df2 %>% mutate(., month = inspection.date)
df2$month
head(df2)
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df2 <- df2 %>% mutate(., month = inspection.date)
df2$month[1]
head(df2)
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df2 <- df2 %>% mutate(., month = inspection.date)
df2$month[1][1]
head(df2)
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
?for
}
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df2 <- df2 %>% mutate(., month = inspection.date)
for (i in 1:length(df2$month)) {
df2$month[i] = sub(df2$month[i], 6,7)
}
?as.Date.numeric
?format
format(13.7)
format(13.7, nsmall = 3)
format(c(6.0, 13.1), digits = 2)
format(c(6.0, 13.1), digits = 2, nsmall = 1)
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df2 <- df2 %>% mutate(., month = format(inspection.date, "%m")) %>% transform(., month = as.Date.numeric())
df2 <- df2 %>% mutate(., month = format(inspection.date, "%m"))
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df2 <- df2 %>% mutate(., month = format(inspection.date, "%m"))
head(df2)
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
df2 <- raw.df %>% select_all(., tolower)
names(df2)<- str_replace_all(names(df2), " ", "." )
# 2. Convert the inspection.date column from character to date format.
df2 <- df2 %>% transform(., inspection.date = as.Date(inspection.date,"%m/%d/%y"))
sapply(df2, class)
head(df2)
# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
df2 <- df2 %>% mutate(., month = format(inspection.date, "%m"))
df2 <- df2 %>% transform(., month = as.numeric(month))
head(df2)
# 4. Impute the missing values for the 'grade' column
# 5. Rename the description from the action column to something short so it won't blow up your graph.
# 6. We want to filter out missing values to make our lives easier for further analysis.
# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
# 8. Unique inspections
View(df2)
sapply
?sapply
?if
?if_else
?if_else
knitr::opts_chunk$set(echo = TRUE)
#Density plot: Restaurants by score and borough
ggplot(data=inspections, aes (x=score)) +
stat_density(aes(color=boro), geom="line",position="identity") +
coord_cartesian(xlim=c(0,40)) +
labs(title='Density of restaurants by latest score and borough',
x='Score',
y='Restaurant density') +
scale_y_continuous(breaks=seq(0,0.14,0.02),
labels = scales::percent) +
scale_colour_brewer(palette='Set1') +
theme_bw() +
theme(legend.key=element_blank()) +
geom_vline(xintercept = c(14,28), colour='grey') +
annotate("text", x = c(6,20,35), y = 0.11, label = c('A','B','C'), size=6) +
annotate("rect", xmin = 0, xmax = 14, ymin = 0, ymax = 0.13, alpha = .2, fill='darkred') +
annotate("rect", xmin = 14, xmax = 28, ymin = 0, ymax = 0.13, alpha = .2, fill='darkblue') +
annotate("rect", xmin = 28, xmax = 60, ymin = 0, ymax = 0.13, alpha = .2, fill='darkgreen')
#Bar plot: Restaurants by cuisine and grade
cuisine_flitered <- inspections %>%
group_by(cuisine) %>%
summarise(count=n()) %>%
top_n(20, count)
#Bar plot: Restaurants by borough and grade
ggplot(data=inspections) +
geom_bar(aes(x=boro,fill=grade), position='dodge') +
labs(title='Restaurants by borough and latest grade',
x='Borough',
y='Restaurants') +
scale_fill_brewer(palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
library(tidyverse)
raw.df <- readr::read_csv("./data.csv")
raw.df <- readr::read_csv("./data.csv")
setwd("~/Downloads/Data_Visualization_Lab")
raw.df <- readr::read_csv("./data.csv")
raw.df <- readr::read_csv("./data.csv")
raw.df <- readr::read_csv("./data.csv")
raw.df <- readr::read_csv("./data.csv")
raw.df <- readr::read_csv("./data.csv")
raw.df <- readr::read_csv("./data.csv")
setwd("~/Downloads/Data_Visualization_Lab")
runApp('~/Downloads/Olympic')
runApp('~/Downloads/Olympic')
data <- read_csv("./data/athlete_events.csv")
head(data)
setwd("~/Downloads/Olympic")
head(data)
data <- read_csv("./data/athlete_events.csv")
head(data)
View(data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data <- read_csv("./data/athlete_events.csv") %>%
mutate(Medal = replace_na(Medal,0),
medal_value = ifelse(Medal == "Gold", 3, ifelse(Medal == "Silver", 2, 1)))
View(data)
data <- read_csv("./data/athlete_events.csv") %>%
mutate(Medal = replace_na(Medal,0),
medal_value = ifelse(Medal == "Gold", 3, ifelse(Medal == "Silver", 2, ifelse(Medal == "Bronze",1,0))))
View(data)
runApp()
?
checkboxGroupInput
runApp()
runApp()
runApp()
runApp()
?length
?count
?count()
library("dbplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
?count
runApp()
Medal_Count = Gold + Silver + Bronze
runApp()
?arrange
runApp()
runApp()
runApp()
